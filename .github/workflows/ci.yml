name: CI Pipeline

on:
  push:
    branches:
      - main
      - docs
      - develop
      - config
      - application
      - domain
      - presentation
  pull_request:
    branches:
      - main
      - develop
      - 'release/*'

env:
  NODE_VERSION: '22'

jobs:
  # Job 1: Linting y Formateo
  lint-and-format:
    name: 🔍 Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint

      - name: 💅 Check Prettier formatting
        run: npm run format:check

  # Job 2: Type Checking
  type-check:
    name: 📝 Type Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📝 Run TypeScript compiler
        run: npm run type

  # Job 3: Testing
  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18', '20', '22']
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm run test

      - name: 📊 Generate coverage report
        run: npm run coverage

      - name: 📤 Upload coverage to Codecov
        if: matrix.node-version == '18'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # Job 4: Build
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    needs: [lint-and-format, type-check, test]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 30

      - name: 📤 Upload stats
        uses: actions/upload-artifact@v4
        with:
          name: bundle-stats
          path: stats/
          retention-days: 30

  # Job 5: Documentation
  docs:
    name: 📚 Generate Documentation
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/docs'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📚 Generate documentation
        run: npm run docs

      - name: 📤 Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/
          retention-days: 90

      # Deploy documentation to GitHub Pages (only on main branch)
      - name: 🚀 Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          cname: mlform-docs.yourdomain.com # Opcional: tu dominio personalizado

  # Job 6: Security Audit
  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔒 Run npm audit
        run: npm audit --audit-level=moderate

      - name: 🔒 Run npm audit fix
        run: npm audit fix --dry-run

  # Job 7: Dependency Review (solo en PRs)
  dependency-review:
    name: 📦 Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate

  # Job 8: Notify results
  notify:
    name: 📢 Notify Results
    runs-on: ubuntu-latest
    needs: [lint-and-format, type-check, test, build, docs, security]
    if: always()
    steps:
      - name: 📢 Notification
        run: |
          if [[ "${{ needs.lint-and-format.result }}" == "success" && 
                "${{ needs.type-check.result }}" == "success" && 
                "${{ needs.test.result }}" == "success" && 
                "${{ needs.build.result }}" == "success" ]]; then
            echo "✅ All CI checks passed successfully!"
          else
            echo "❌ Some CI checks failed. Please review the logs."
            exit 1
          fi