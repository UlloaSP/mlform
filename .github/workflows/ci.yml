name: CI Pipeline

on:
  push:
    branches:
      - main
      - docs
      - develop
      - config
      - application
      - domain
      - presentation
  pull_request:
    branches:
      - main
      - develop
      - 'release/*'

env:
  NODE_VERSION: '22'

jobs:
  # Job 1: Linting y Formateo
  lint-and-format:
    name: 🔍 Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run Biome
        run: npm run lint

  # Job 2: Type Checking
  type-check:
    name: 📝 Type Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📝 Run TypeScript compiler
        run: npm run type

  # Job 3: Testing
  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18', '20', '22']
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm run test

      - name: 📊 Generate coverage report
        run: npm run coverage

      - name: 🎯 Check coverage threshold (80%)
        if: matrix.node-version == '18'
        run: |
          npm run coverage:check || {
            echo "❌ Coverage is below 80% threshold"
            exit 1
          }

      - name: 📤 Upload coverage to Codecov
        if: matrix.node-version == '18'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  # Job 4: Build
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    needs: [lint-and-format, type-check, test]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 30

      - name: 📤 Upload stats
        uses: actions/upload-artifact@v4
        with:
          name: bundle-stats
          path: stats/
          retention-days: 30