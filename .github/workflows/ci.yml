name: CI & Publish

on:
  push:
    branches:
      - main
      - docs
      - develop
      - config
      - application
      - domain
      - presentation
  pull_request:
    branches:
      - main
      - develop
      - 'release/*'

env:
  NODE_VERSION: '22.14.0'

jobs:
  lint-and-format:
    name: 🔍 Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run Biome
        run: npm run lint

  type-check:
    name: 📝 Type Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📝 Run TypeScript compiler
        run: npm run type

  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm run test

      - name: 📊 Generate coverage report
        run: npm run coverage

      - name: 📤 Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          if-no-files-found: warn
          retention-days: 30

  build-docs:
    name: 📚 Build Documentation
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: docs/package-lock.json

      - name: 📦 Install docs dependencies
        working-directory: docs
        run: npm ci

      - name: 🏗️ Build documentation
        working-directory: docs
        run: npm run build

      - name: 📤 Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs-build
          path: docs/build/
          if-no-files-found: error
          retention-days: 30

  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    needs: [lint-and-format, type-check, test, build-docs]
    if: always() && needs.lint-and-format.result == 'success' && needs.type-check.result == 'success' && needs.test.result == 'success' && (needs.build-docs.result == 'success' || needs.build-docs.result == 'skipped')
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: 📤 Upload bundle stats
        uses: actions/upload-artifact@v4
        with:
          name: bundle-stats
          path: stats/
          if-no-files-found: warn
          retention-days: 30

  publish-npm:
    name: 📦 Publish to NPM (main only)
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref_name == 'main' && github.repository_owner == 'UlloaSP'
    permissions:
      contents: write
      id-token: write
    outputs:
      package_version: ${{ steps.get_version.outputs.version }}
      published: ${{ steps.publish.outcome == 'success' }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build for publication
        run: npm run build

      - name: 📝 Get package version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: 🚀 Publish to NPM
        id: publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --provenance --access public

  create-release:
    name: 🎉 Create GitHub Release
    runs-on: ubuntu-latest
    needs: [publish-npm]
    if: needs.publish-npm.outputs.published == 'true'
    permissions:
      contents: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build package
        run: npm run build

      - name: 📦 Create package tarball
        run: npm pack

      - name: 🎉 Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.publish-npm.outputs.package_version }}
          name: Release v${{ needs.publish-npm.outputs.package_version }}
          generate_release_notes: true
          files: |
            *.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-docs:
    name: 🚀 Deploy Documentation to GitHub Pages
    runs-on: ubuntu-latest
    needs: [create-release]
    if: success()
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: false
    steps:
      - name: 📥 Download docs artifact
        uses: actions/download-artifact@v4
        with:
          name: docs-build
          path: docs-build

      - name: 🔧 Setup Pages
        uses: actions/configure-pages@v5

      - name: 📤 Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs-build
          name: github-pages

      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
