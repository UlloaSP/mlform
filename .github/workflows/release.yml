name: Release Pipeline

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string

env:
  NODE_VERSION: '22.14.0'

jobs:
  release:
    name: 🚀 Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run full CI pipeline
        run: npm run ci

      - name: 🏷️ Get version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: 📝 Generate changelog
        id: changelog
        run: |
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 🚀 Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            ## 🎉 Release v${{ steps.version.outputs.version }}
            
            ### 📋 Changes
            ${{ steps.changelog.outputs.changelog }}
            
            ### 📦 Assets
            - Built library files
            - TypeScript declarations
            - Documentation
            
            ### 🔗 Links
            - [Documentation](https://your-username.github.io/mlform/)
            - [NPM Package](https://www.npmjs.com/package/mlform)
          draft: false
          prerelease: false

      - name: 📤 Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist
          asset_name: mlform-dist-v${{ steps.version.outputs.version }}.tar.gz
          asset_content_type: application/gzip

  publish-npm:
    name: 📦 Publish to NPM
    runs-on: ubuntu-latest
    needs: [release]
    if: github.repository_owner == 'UlloaSP' # Cambia por tu username
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build for publication
        run: npm run build

      - name: 📋 Update package.json version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          npm version $VERSION --no-git-tag-version

      - name: 🚀 Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
